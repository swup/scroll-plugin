---
import '../styles/global.css';

interface Props {
	title?: string;
	description?: string;
	isFrontPage?: boolean;
	hideHeader?: boolean;
	noindex?: boolean;
	intro?: string;
}

import Head from '../components/Head.astro';
import Footer from '../components/Footer.astro';
import { SITE_TITLE, SITE_DESCRIPTION } from '../consts';
import Header from '../components/Header.astro';

const { title, description, noindex, isFrontPage = false, hideHeader = true, intro } = Astro.props;
---

<!doctype html>
<html lang="en">
	<Head
		title={title ? `${title} - ${SITE_TITLE}` : SITE_TITLE}
		description={description ?? SITE_DESCRIPTION}
		noindex={noindex}
	/>
	<body>
		<Header />

		<div id="swup" class="p-4">
			<header class="mb-10" class:list={[{ 'sr-only': hideHeader }]}>
				<h1 class="text-4xl font-bold mb-0.5">{SITE_TITLE}</h1>
				<div class="font-bold"><slot name="after-header" /></div>
			</header>

			<slot />

			<Footer />
		</div>

		<script src="https://unpkg.com/@swup/preload-plugin@3"></script>
		<script src="https://unpkg.com/@swup/fade-theme@2"></script>

		<script>
			import Swup from 'swup';
			import SwupScrollPlugin from '../../../src/index.js';

			const scrollPlugin = new SwupScrollPlugin({
				markScrollTarget: true,
				shouldResetScrollPosition: (trigger) => {
					const preserve = !trigger?.matches('[data-swup-preserve-scroll]');
					return preserve;
				},

				getAnchorElement: (hash: string) => {
					return document.querySelector(`[data-testid="${hash.replace('#', '')}"]`);
				},

				offset: (target, container, { top, left }) => {
					const headerHeight = document.querySelector('#header')!.clientHeight + 20;

					// scrolling the root
					if (container.matches(':root')) {
						return headerHeight;
					}

					const maxTop = container.scrollHeight - container.clientHeight;
					if (top === maxTop) return 0;

					// scrolling a fixed div
					return getComputedStyle(container).position === 'fixed' ? headerHeight : 0;
				}
			});

			// Make the window.scrollPlugin available to e2e tests
			declare global {
				interface Window {
					scrollPlugin: SwupScrollPlugin;
				}
			}
			window.scrollPlugin = scrollPlugin;

			document.addEventListener('DOMContentLoaded', (event) => {
				const swup = new Swup({
					containers: ['#swup', '#header'],
					plugins: [
						// @ts-expect-error
						new SwupPreloadPlugin({ preloadVisibleLinks: true }),
						// @ts-expect-error
						new SwupFadeTheme(),
						scrollPlugin
					]
				});
			});
		</script>
	</body>
</html>
